#!/bin/sh

force=1

inject_secret_osx() {
	until security find-generic-password -a "$(whoami)" -s "$1" > /dev/null 2>&1
	do
		echo "New password detected: $1"
		security add-generic-password -a "$(whoami)" -s "$1" -w
	done
	export "$1"="$(security find-generic-password -a "$(whoami)" -s "$1" -w)"
}

inject_secret_pass() {
	command -v pass >/dev/null || { echo "I require pass (https://passwordstore.org/) but it's not installed.  Aborting." >&2; return 1; }
	until pass list "$1" >/dev/null 2>&1
	do
		pass insert "$1"
	done
	export "$1"="$(pass show "$1")"
}

is_command() {
	[ "${1%${1#?}}"x = '!x' ]
}

is_secret() {
	test "${1#*=}" = "$1"
	return $?
}

export_config() {
	export "${1?}"
}

export_secret() {
	case "$(uname -s)" in
		Darwin*)    inject_secret_osx "$1";;
		*)          inject_secret_pass "$1";;
	esac
}

export_command() {
	string=$(echo "$1" | awk '{ string=substr($0, 2); print string; }')
	export "${string%=*}"="$(eval "${string#*=}")"
}

check_env_exists() {
	if [ ! -f "./.env" ]
	then
		echo "There is no .env in this directory, this file is required."
		return 1
	fi
}

should_set() {
	if [ "$force" -eq 0 ] || [ -z "$(printenv "${1%=*}")" ]
	then
		return 0
	else
		return 1
	fi
}

export_envs() {
	while read -r line <&3 || [ -n "$line" ]; do
		case "$line" in
			\#*|'') continue ;;
		esac

		if ! should_set "$line"
		then
			continue
		elif is_secret "$line"
		then
			export_secret "$line"
		elif is_command "$line"
		then
			export_command "$line"
		else
			export_config "$line"
		fi
	done 3<"$1"
}

read_in_flags() {
	while test $# -gt 0; do
		case "$1" in
			-h|--help)
				echo "-h, --help                show brief help"
				echo "-f, --force       	  override already set environmental variables"
				return 0
				;;
			-f|--force)
				force=0
				shift
				;;
			*)
				break
				;;
		esac
	done
}

read_in_flags "$@"
check_env_exists || return 1
export_envs "./.env"
